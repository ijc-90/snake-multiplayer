// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matchmaking.proto

package matchmaking

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MatchMakingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchMakingRequest) Reset()         { *m = MatchMakingRequest{} }
func (m *MatchMakingRequest) String() string { return proto.CompactTextString(m) }
func (*MatchMakingRequest) ProtoMessage()    {}
func (*MatchMakingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d975fabe6dfb2c7d, []int{0}
}

func (m *MatchMakingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchMakingRequest.Unmarshal(m, b)
}
func (m *MatchMakingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchMakingRequest.Marshal(b, m, deterministic)
}
func (m *MatchMakingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchMakingRequest.Merge(m, src)
}
func (m *MatchMakingRequest) XXX_Size() int {
	return xxx_messageInfo_MatchMakingRequest.Size(m)
}
func (m *MatchMakingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchMakingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchMakingRequest proto.InternalMessageInfo

type MatchMakingResponse struct {
	GameId               int32    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	PlayerId             int32    `protobuf:"varint,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchMakingResponse) Reset()         { *m = MatchMakingResponse{} }
func (m *MatchMakingResponse) String() string { return proto.CompactTextString(m) }
func (*MatchMakingResponse) ProtoMessage()    {}
func (*MatchMakingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d975fabe6dfb2c7d, []int{1}
}

func (m *MatchMakingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchMakingResponse.Unmarshal(m, b)
}
func (m *MatchMakingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchMakingResponse.Marshal(b, m, deterministic)
}
func (m *MatchMakingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchMakingResponse.Merge(m, src)
}
func (m *MatchMakingResponse) XXX_Size() int {
	return xxx_messageInfo_MatchMakingResponse.Size(m)
}
func (m *MatchMakingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchMakingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MatchMakingResponse proto.InternalMessageInfo

func (m *MatchMakingResponse) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *MatchMakingResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func init() {
	proto.RegisterType((*MatchMakingRequest)(nil), "MatchMakingRequest")
	proto.RegisterType((*MatchMakingResponse)(nil), "MatchMakingResponse")
}

func init() {
	proto.RegisterFile("matchmaking.proto", fileDescriptor_d975fabe6dfb2c7d)
}

var fileDescriptor_d975fabe6dfb2c7d = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x4d, 0x2c, 0x49,
	0xce, 0xc8, 0x4d, 0xcc, 0xce, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x12, 0xe1,
	0x12, 0xf2, 0x05, 0x09, 0xfa, 0x82, 0x05, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0x3c,
	0xb9, 0x84, 0x51, 0x44, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0xd2, 0x13,
	0x73, 0x53, 0x3d, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xa0, 0x3c, 0x21, 0x29, 0x2e,
	0x8e, 0x82, 0x9c, 0xc4, 0xca, 0xd4, 0x22, 0xcf, 0x14, 0x09, 0x26, 0xb0, 0x0c, 0x9c, 0x6f, 0x14,
	0xc8, 0x25, 0x8e, 0x64, 0x94, 0x73, 0x7e, 0x6e, 0x6e, 0x69, 0x5e, 0x66, 0x72, 0x62, 0x49, 0x7e,
	0x91, 0x90, 0x19, 0x17, 0x7b, 0x7a, 0x6a, 0x89, 0x7b, 0x62, 0x6e, 0xaa, 0x90, 0xb0, 0x1e, 0xa6,
	0x2b, 0xa4, 0x44, 0xf4, 0xb0, 0x38, 0x42, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x74, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xc3, 0x87, 0x9a, 0x13, 0xcf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MatchMakingCommunicatorClient is the client API for MatchMakingCommunicator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatchMakingCommunicatorClient interface {
	// Connects to a game or creates a new one
	GetGame(ctx context.Context, in *MatchMakingRequest, opts ...grpc.CallOption) (*MatchMakingResponse, error)
}

type matchMakingCommunicatorClient struct {
	cc grpc.ClientConnInterface
}

func NewMatchMakingCommunicatorClient(cc grpc.ClientConnInterface) MatchMakingCommunicatorClient {
	return &matchMakingCommunicatorClient{cc}
}

func (c *matchMakingCommunicatorClient) GetGame(ctx context.Context, in *MatchMakingRequest, opts ...grpc.CallOption) (*MatchMakingResponse, error) {
	out := new(MatchMakingResponse)
	err := c.cc.Invoke(ctx, "/MatchMakingCommunicator/getGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatchMakingCommunicatorServer is the server API for MatchMakingCommunicator service.
type MatchMakingCommunicatorServer interface {
	// Connects to a game or creates a new one
	GetGame(context.Context, *MatchMakingRequest) (*MatchMakingResponse, error)
}

// UnimplementedMatchMakingCommunicatorServer can be embedded to have forward compatible implementations.
type UnimplementedMatchMakingCommunicatorServer struct {
}

func (*UnimplementedMatchMakingCommunicatorServer) GetGame(ctx context.Context, req *MatchMakingRequest) (*MatchMakingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGame not implemented")
}

func RegisterMatchMakingCommunicatorServer(s *grpc.Server, srv MatchMakingCommunicatorServer) {
	s.RegisterService(&_MatchMakingCommunicator_serviceDesc, srv)
}

func _MatchMakingCommunicator_GetGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchMakingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatchMakingCommunicatorServer).GetGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MatchMakingCommunicator/GetGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatchMakingCommunicatorServer).GetGame(ctx, req.(*MatchMakingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MatchMakingCommunicator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MatchMakingCommunicator",
	HandlerType: (*MatchMakingCommunicatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getGame",
			Handler:    _MatchMakingCommunicator_GetGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "matchmaking.proto",
}
