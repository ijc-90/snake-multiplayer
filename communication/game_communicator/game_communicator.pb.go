// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game_communicator.proto

package game_communicator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DirectionRequest struct {
	SnakeNumber          int32    `protobuf:"varint,1,opt,name=snakeNumber,proto3" json:"snakeNumber,omitempty"`
	SnakeDirection       int32    `protobuf:"varint,2,opt,name=snakeDirection,proto3" json:"snakeDirection,omitempty"`
	GameId               int32    `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectionRequest) Reset()         { *m = DirectionRequest{} }
func (m *DirectionRequest) String() string { return proto.CompactTextString(m) }
func (*DirectionRequest) ProtoMessage()    {}
func (*DirectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{0}
}

func (m *DirectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectionRequest.Unmarshal(m, b)
}
func (m *DirectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectionRequest.Marshal(b, m, deterministic)
}
func (m *DirectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectionRequest.Merge(m, src)
}
func (m *DirectionRequest) XXX_Size() int {
	return xxx_messageInfo_DirectionRequest.Size(m)
}
func (m *DirectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DirectionRequest proto.InternalMessageInfo

func (m *DirectionRequest) GetSnakeNumber() int32 {
	if m != nil {
		return m.SnakeNumber
	}
	return 0
}

func (m *DirectionRequest) GetSnakeDirection() int32 {
	if m != nil {
		return m.SnakeDirection
	}
	return 0
}

func (m *DirectionRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type DirectionResponse struct {
	Received             int32    `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectionResponse) Reset()         { *m = DirectionResponse{} }
func (m *DirectionResponse) String() string { return proto.CompactTextString(m) }
func (*DirectionResponse) ProtoMessage()    {}
func (*DirectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{1}
}

func (m *DirectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectionResponse.Unmarshal(m, b)
}
func (m *DirectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectionResponse.Marshal(b, m, deterministic)
}
func (m *DirectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectionResponse.Merge(m, src)
}
func (m *DirectionResponse) XXX_Size() int {
	return xxx_messageInfo_DirectionResponse.Size(m)
}
func (m *DirectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DirectionResponse proto.InternalMessageInfo

func (m *DirectionResponse) GetReceived() int32 {
	if m != nil {
		return m.Received
	}
	return 0
}

type MatchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchRequest) Reset()         { *m = MatchRequest{} }
func (m *MatchRequest) String() string { return proto.CompactTextString(m) }
func (*MatchRequest) ProtoMessage()    {}
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{2}
}

func (m *MatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchRequest.Unmarshal(m, b)
}
func (m *MatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchRequest.Marshal(b, m, deterministic)
}
func (m *MatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchRequest.Merge(m, src)
}
func (m *MatchRequest) XXX_Size() int {
	return xxx_messageInfo_MatchRequest.Size(m)
}
func (m *MatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchRequest proto.InternalMessageInfo

type MatchResponse struct {
	GameId               int32    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchResponse) Reset()         { *m = MatchResponse{} }
func (m *MatchResponse) String() string { return proto.CompactTextString(m) }
func (*MatchResponse) ProtoMessage()    {}
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{3}
}

func (m *MatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchResponse.Unmarshal(m, b)
}
func (m *MatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchResponse.Marshal(b, m, deterministic)
}
func (m *MatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchResponse.Merge(m, src)
}
func (m *MatchResponse) XXX_Size() int {
	return xxx_messageInfo_MatchResponse.Size(m)
}
func (m *MatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MatchResponse proto.InternalMessageInfo

func (m *MatchResponse) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type GameStateRequest struct {
	GameState            *Map     `protobuf:"bytes,1,opt,name=gameState,proto3" json:"gameState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStateRequest) Reset()         { *m = GameStateRequest{} }
func (m *GameStateRequest) String() string { return proto.CompactTextString(m) }
func (*GameStateRequest) ProtoMessage()    {}
func (*GameStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{4}
}

func (m *GameStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStateRequest.Unmarshal(m, b)
}
func (m *GameStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStateRequest.Marshal(b, m, deterministic)
}
func (m *GameStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStateRequest.Merge(m, src)
}
func (m *GameStateRequest) XXX_Size() int {
	return xxx_messageInfo_GameStateRequest.Size(m)
}
func (m *GameStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameStateRequest proto.InternalMessageInfo

func (m *GameStateRequest) GetGameState() *Map {
	if m != nil {
		return m.GameState
	}
	return nil
}

type Map struct {
	SnakeOne             *Snake   `protobuf:"bytes,1,opt,name=snakeOne,proto3" json:"snakeOne,omitempty"`
	SnakeTwo             *Snake   `protobuf:"bytes,2,opt,name=snakeTwo,proto3" json:"snakeTwo,omitempty"`
	FruitPosition        *Point   `protobuf:"bytes,3,opt,name=fruitPosition,proto3" json:"fruitPosition,omitempty"`
	GameId               int32    `protobuf:"varint,4,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Height               int32    `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Width                int32    `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	GameOver             bool     `protobuf:"varint,7,opt,name=gameOver,proto3" json:"gameOver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Map) Reset()         { *m = Map{} }
func (m *Map) String() string { return proto.CompactTextString(m) }
func (*Map) ProtoMessage()    {}
func (*Map) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{5}
}

func (m *Map) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Map.Unmarshal(m, b)
}
func (m *Map) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Map.Marshal(b, m, deterministic)
}
func (m *Map) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Map.Merge(m, src)
}
func (m *Map) XXX_Size() int {
	return xxx_messageInfo_Map.Size(m)
}
func (m *Map) XXX_DiscardUnknown() {
	xxx_messageInfo_Map.DiscardUnknown(m)
}

var xxx_messageInfo_Map proto.InternalMessageInfo

func (m *Map) GetSnakeOne() *Snake {
	if m != nil {
		return m.SnakeOne
	}
	return nil
}

func (m *Map) GetSnakeTwo() *Snake {
	if m != nil {
		return m.SnakeTwo
	}
	return nil
}

func (m *Map) GetFruitPosition() *Point {
	if m != nil {
		return m.FruitPosition
	}
	return nil
}

func (m *Map) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *Map) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Map) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Map) GetGameOver() bool {
	if m != nil {
		return m.GameOver
	}
	return false
}

type Point struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{6}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type Snake struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position             *Point   `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Direction            int32    `protobuf:"varint,3,opt,name=direction,proto3" json:"direction,omitempty"`
	Won                  bool     `protobuf:"varint,4,opt,name=won,proto3" json:"won,omitempty"`
	Lost                 bool     `protobuf:"varint,5,opt,name=lost,proto3" json:"lost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Snake) Reset()         { *m = Snake{} }
func (m *Snake) String() string { return proto.CompactTextString(m) }
func (*Snake) ProtoMessage()    {}
func (*Snake) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f613927d158904c, []int{7}
}

func (m *Snake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snake.Unmarshal(m, b)
}
func (m *Snake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snake.Marshal(b, m, deterministic)
}
func (m *Snake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snake.Merge(m, src)
}
func (m *Snake) XXX_Size() int {
	return xxx_messageInfo_Snake.Size(m)
}
func (m *Snake) XXX_DiscardUnknown() {
	xxx_messageInfo_Snake.DiscardUnknown(m)
}

var xxx_messageInfo_Snake proto.InternalMessageInfo

func (m *Snake) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Snake) GetPosition() *Point {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Snake) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *Snake) GetWon() bool {
	if m != nil {
		return m.Won
	}
	return false
}

func (m *Snake) GetLost() bool {
	if m != nil {
		return m.Lost
	}
	return false
}

func init() {
	proto.RegisterType((*DirectionRequest)(nil), "DirectionRequest")
	proto.RegisterType((*DirectionResponse)(nil), "DirectionResponse")
	proto.RegisterType((*MatchRequest)(nil), "MatchRequest")
	proto.RegisterType((*MatchResponse)(nil), "MatchResponse")
	proto.RegisterType((*GameStateRequest)(nil), "GameStateRequest")
	proto.RegisterType((*Map)(nil), "Map")
	proto.RegisterType((*Point)(nil), "Point")
	proto.RegisterType((*Snake)(nil), "Snake")
}

func init() {
	proto.RegisterFile("game_communicator.proto", fileDescriptor_0f613927d158904c)
}

var fileDescriptor_0f613927d158904c = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x14, 0x5c, 0xb7, 0x4d, 0xc9, 0xbe, 0x6e, 0xab, 0xf6, 0x09, 0x41, 0x54, 0x71, 0xa8, 0x8c, 0x04,
	0x3d, 0xa0, 0x80, 0x16, 0x89, 0x3b, 0x02, 0x09, 0x38, 0x94, 0x5d, 0x65, 0x97, 0x33, 0xf2, 0x26,
	0x8f, 0xd6, 0x82, 0xc4, 0x21, 0x71, 0xb7, 0xdb, 0x13, 0x3f, 0xc0, 0x2f, 0xf2, 0x2f, 0xc8, 0x8e,
	0xe3, 0xa6, 0xbd, 0x79, 0xc6, 0xe3, 0x4e, 0xe7, 0xbd, 0x09, 0x3c, 0x5d, 0x8b, 0x9c, 0xbe, 0xa7,
	0x2a, 0xcf, 0xb7, 0x85, 0x4c, 0x85, 0x56, 0x55, 0x5c, 0x56, 0x4a, 0x2b, 0xae, 0x61, 0xfa, 0x51,
	0x56, 0x94, 0x6a, 0xa9, 0x8a, 0x84, 0x7e, 0x6f, 0xa9, 0xd6, 0xb8, 0x80, 0x51, 0x5d, 0x88, 0x9f,
	0xf4, 0x75, 0x9b, 0xdf, 0x51, 0x15, 0xb1, 0x05, 0x5b, 0x06, 0x49, 0x97, 0xc2, 0x17, 0x30, 0xb1,
	0xd0, 0x3f, 0x8d, 0x7a, 0x56, 0x74, 0xc2, 0xe2, 0x13, 0x18, 0x1a, 0xe3, 0x2f, 0x59, 0xd4, 0xb7,
	0xf7, 0x0e, 0xf1, 0xd7, 0x30, 0xeb, 0xb8, 0xd6, 0xa5, 0x2a, 0x6a, 0xc2, 0x39, 0x84, 0x15, 0xa5,
	0x24, 0xef, 0x29, 0x73, 0x9e, 0x1e, 0xf3, 0x09, 0x5c, 0xac, 0x84, 0x4e, 0x37, 0xee, 0x2f, 0xf2,
	0x97, 0x30, 0x76, 0xd8, 0x3d, 0x3e, 0x38, 0xb1, 0x23, 0xa7, 0x77, 0x30, 0xfd, 0x24, 0x72, 0xba,
	0xd1, 0x42, 0x53, 0x9b, 0x8f, 0xc3, 0xf9, 0xba, 0xe5, 0xac, 0x7c, 0x74, 0x39, 0x88, 0x57, 0xa2,
	0x4c, 0x0e, 0x34, 0xff, 0xc7, 0xa0, 0xbf, 0x12, 0x25, 0x72, 0x08, 0x6d, 0xa6, 0xab, 0xa2, 0x95,
	0x0e, 0xe3, 0x1b, 0x43, 0x24, 0x9e, 0xf7, 0x9a, 0xdb, 0x9d, 0xb2, 0x73, 0x38, 0xd5, 0xdc, 0xee,
	0x14, 0xbe, 0x82, 0xf1, 0x8f, 0x6a, 0x2b, 0xf5, 0xb5, 0xaa, 0xa5, 0x1d, 0x58, 0xdf, 0x09, 0xaf,
	0x95, 0x2c, 0x74, 0x72, 0x7c, 0xd9, 0x49, 0x33, 0xe8, 0xa6, 0x31, 0xfc, 0x86, 0xe4, 0x7a, 0xa3,
	0xa3, 0xa0, 0xe1, 0x1b, 0x84, 0x8f, 0x21, 0xd8, 0xc9, 0x4c, 0x6f, 0xa2, 0xa1, 0xa5, 0x1b, 0x60,
	0x06, 0x6a, 0xde, 0x5d, 0xdd, 0x53, 0x15, 0x3d, 0x5a, 0xb0, 0x65, 0x98, 0x78, 0xcc, 0x9f, 0x43,
	0x60, 0x9d, 0xf1, 0x02, 0xd8, 0x83, 0x9b, 0x19, 0x7b, 0x30, 0x68, 0xef, 0x76, 0xc9, 0xf6, 0xfc,
	0x0f, 0x04, 0x36, 0x07, 0x4e, 0xa0, 0x27, 0xdb, 0xc9, 0xf6, 0x64, 0x66, 0x12, 0x97, 0x6d, 0x90,
	0xde, 0x51, 0x10, 0xcf, 0xe3, 0x33, 0x38, 0xcf, 0x7c, 0x3d, 0x9a, 0xf5, 0x1f, 0x08, 0x9c, 0x42,
	0x7f, 0xa7, 0x0a, 0x1b, 0x2f, 0x4c, 0xcc, 0x11, 0x11, 0x06, 0xbf, 0x54, 0xdd, 0x24, 0x0b, 0x13,
	0x7b, 0xbe, 0xfc, 0xcb, 0x9a, 0xf5, 0x7d, 0xe8, 0x14, 0x17, 0x63, 0x18, 0xa5, 0x15, 0x09, 0x4d,
	0xb6, 0x01, 0x38, 0x8e, 0xbb, 0xcd, 0x98, 0x4f, 0xe2, 0xa3, 0x62, 0xf0, 0x33, 0xfc, 0x0c, 0xf3,
	0x9a, 0xb4, 0xef, 0x5b, 0xfd, 0xbe, 0xc8, 0xbe, 0x95, 0x99, 0xd0, 0x64, 0x7e, 0x19, 0x67, 0xf1,
	0x69, 0xff, 0xe7, 0xb3, 0xf8, 0xb4, 0x32, 0xfc, 0x6c, 0xc9, 0xde, 0xb0, 0xbb, 0xa1, 0xfd, 0x66,
	0xde, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x30, 0x4a, 0x2a, 0x6f, 0x4e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GameCommunicatorClient is the client API for GameCommunicator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameCommunicatorClient interface {
	CreateMatch(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error)
	SetDirectionsAndUpdateGame(ctx context.Context, opts ...grpc.CallOption) (GameCommunicator_SetDirectionsAndUpdateGameClient, error)
}

type gameCommunicatorClient struct {
	cc grpc.ClientConnInterface
}

func NewGameCommunicatorClient(cc grpc.ClientConnInterface) GameCommunicatorClient {
	return &gameCommunicatorClient{cc}
}

func (c *gameCommunicatorClient) CreateMatch(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error) {
	out := new(MatchResponse)
	err := c.cc.Invoke(ctx, "/GameCommunicator/createMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameCommunicatorClient) SetDirectionsAndUpdateGame(ctx context.Context, opts ...grpc.CallOption) (GameCommunicator_SetDirectionsAndUpdateGameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameCommunicator_serviceDesc.Streams[0], "/GameCommunicator/setDirectionsAndUpdateGame", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameCommunicatorSetDirectionsAndUpdateGameClient{stream}
	return x, nil
}

type GameCommunicator_SetDirectionsAndUpdateGameClient interface {
	Send(*DirectionRequest) error
	Recv() (*GameStateRequest, error)
	grpc.ClientStream
}

type gameCommunicatorSetDirectionsAndUpdateGameClient struct {
	grpc.ClientStream
}

func (x *gameCommunicatorSetDirectionsAndUpdateGameClient) Send(m *DirectionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameCommunicatorSetDirectionsAndUpdateGameClient) Recv() (*GameStateRequest, error) {
	m := new(GameStateRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GameCommunicatorServer is the server API for GameCommunicator service.
type GameCommunicatorServer interface {
	CreateMatch(context.Context, *MatchRequest) (*MatchResponse, error)
	SetDirectionsAndUpdateGame(GameCommunicator_SetDirectionsAndUpdateGameServer) error
}

// UnimplementedGameCommunicatorServer can be embedded to have forward compatible implementations.
type UnimplementedGameCommunicatorServer struct {
}

func (*UnimplementedGameCommunicatorServer) CreateMatch(ctx context.Context, req *MatchRequest) (*MatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMatch not implemented")
}
func (*UnimplementedGameCommunicatorServer) SetDirectionsAndUpdateGame(srv GameCommunicator_SetDirectionsAndUpdateGameServer) error {
	return status.Errorf(codes.Unimplemented, "method SetDirectionsAndUpdateGame not implemented")
}

func RegisterGameCommunicatorServer(s *grpc.Server, srv GameCommunicatorServer) {
	s.RegisterService(&_GameCommunicator_serviceDesc, srv)
}

func _GameCommunicator_CreateMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameCommunicatorServer).CreateMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameCommunicator/CreateMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameCommunicatorServer).CreateMatch(ctx, req.(*MatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCommunicator_SetDirectionsAndUpdateGame_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameCommunicatorServer).SetDirectionsAndUpdateGame(&gameCommunicatorSetDirectionsAndUpdateGameServer{stream})
}

type GameCommunicator_SetDirectionsAndUpdateGameServer interface {
	Send(*GameStateRequest) error
	Recv() (*DirectionRequest, error)
	grpc.ServerStream
}

type gameCommunicatorSetDirectionsAndUpdateGameServer struct {
	grpc.ServerStream
}

func (x *gameCommunicatorSetDirectionsAndUpdateGameServer) Send(m *GameStateRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameCommunicatorSetDirectionsAndUpdateGameServer) Recv() (*DirectionRequest, error) {
	m := new(DirectionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GameCommunicator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GameCommunicator",
	HandlerType: (*GameCommunicatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createMatch",
			Handler:    _GameCommunicator_CreateMatch_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "setDirectionsAndUpdateGame",
			Handler:       _GameCommunicator_SetDirectionsAndUpdateGame_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "game_communicator.proto",
}
